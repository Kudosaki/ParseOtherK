name: Auto Release

on:
  push:
    branches:
      - main  # Change to your default branch if needed

permissions:
  contents: write  # Grants permission to push tags & create releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for proper versioning

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'  # Adjust Java version as needed

      - name: Get latest tag
        id: get_tag
        run: echo "TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo 'v0.0.0')" >> $GITHUB_ENV

      - name: Calculate next version
        id: version
        run: |
          current_version="${{ env.TAG }}"
          echo "Current version: $current_version"
          new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++; print}')
          echo "NEW_VERSION=v$new_version" >> $GITHUB_ENV
          echo "New version: v$new_version"

      - name: Create and push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Build JAR
        run: mvn clean package

      - name: Find JAR file
        id: find_jar
        run: echo "JAR_FILE=$(find target -name '*.jar' | head -n 1)" >> $GITHUB_ENV

      - name: Upload JAR to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          body: "New release: ${{ env.NEW_VERSION }}"
          files: ${{ env.JAR_FILE }}  # Attach the built JAR file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
